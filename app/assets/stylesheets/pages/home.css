/* aタグ（リンク）の色とテキスト装飾を設定し、!importantで他のスタイルより優先させます。 */
a {
  color: #222 !important; /* テキストの色をダークグレイに設定 */
  text-decoration: none !important; /* テキストの下線を削除 */
}

/* .btn-customクラスを持つ要素の文字色を白に設定します。 */
.btn-custom {
  color: #fff !important; /* テキストの色を白に設定 */
}

/* .btnクラスを持つ要素の文字色を白に設定します。 */
.btn {
  color: #fff !important; /* テキストの色を白に設定 */
}

/* .top-mainクラスを持つ要素のパディング、背景色、オーバーフローを設定します。 */
.top-main {
  padding: 0; /* パディングを0に設定 */
  background-color: rgb(255, 255, 255); /* 背景色を白に設定 */
  overflow: hidden; /* コンテンツがはみ出た場合に隠す */
}

/* .top-mainクラス内のh1要素のフォントサイズ、重さ、行高、アンチエイリアス効果、下マージンを設定します。 */
.top-main h1 {
  font-size: 60px; /* フォントサイズを大きく設定 */
  font-weight: 500; /* フォントの重さを中程度に設定 */
  line-height: 1.1; /* 行の高さを調整 */
  -webkit-font-smoothing: antialiased; /* フォントの滑らかさを向上 */
  margin-bottom: 10px; /* 下マージンを設定 */
}

/* .top-mainクラス内のh2要素に対しても同様のスタイルを適用しますが、フォントサイズを30pxにします。 */
.top-main h2 {
  font-size: 30px; /* フォントサイズを小さく設定 */
  font-weight: 500; /* フォントの重さを中程度に設定 */
  line-height: 1.1; /* 行の高さを調整 */
  -webkit-font-smoothing: antialiased; /* フォントの滑らかさを向上 */
  margin-bottom: 10px; /* 下マージンを設定 */
}

/* .top-mainVisualクラスの要素に位置、パディング、背景色、高さを設定します。 */
.top-mainVisual {
  position: relative; /* 位置を相対的に設定 */
  padding-left: 30px; /* 左側のパディングを設定 */
  padding-right: 30px; /* 右側のパディングを設定 */
  background-color: #f5f8fa; /* 背景色を薄い灰色に設定 */
  height: auto; /* 高さを内容に応じて自動調整 */
}

/* .top-mainVisualクラス内のp要素のフォントサイズと下マージンを設定します。 */
.top-mainVisual p {
  font-size: 24px; /* テキストのフォントサイズを24pxに設定 */
  margin-bottom: 10px; /* 要素の下マージンを10pxに設定 */
}

/* .top-mainVisual__containerクラス内の.leftクラスを持つ要素の幅を50%に設定します。 */
.top-mainVisual__container .left {
  width: 50%; /* 要素の幅をコンテナの50%に設定 */
}

/* .top-mainVisual__containerクラス内の.rightクラスを持つ要素にフレックス1、テキストの右寄せを設定します。 */
.top-mainVisual__container .right {
  flex: 1; /* flexアイテムがコンテナの空き領域を均等に埋めるように設定 */
  text-align: right; /* テキストを右寄せに設定 */
}

/* 画面幅が600px以下の場合、.rightクラスを持つ要素を非表示にし、.leftクラスを持つ要素をフレックスボックスにし、そのスタイルを調整します。 */
@media (max-width: 600px) {
  .top-mainVisual__container .right {
    display: none; /* .rightクラスを持つ要素を非表示に設定 */
  }

  .top-mainVisual__container .left {
    display: flex; /* Flexboxを有効に */
    flex-direction: column; /* 子要素を縦に並べる */
    justify-content: center; /* 子要素をコンテナの中央に配置（縦方向） */
    align-items: center; /* 子要素をコンテナの開始位置に配置（横方向） */
    width: 100%; /* コンテナの幅を100%に設定 */
  }
}

/* .rightクラス内のimg要素の最大幅を設定します。 */
.top-mainVisual__container .right img {
  max-width: 90%; /* 画像の最大幅を90%に設定 */
}

/* .top-mainVisual__containerクラスの最大幅、マージン、ディスプレイタイプ、配置を設定します。 */
.top-mainVisual__container {
  max-width: 960px; /* コンテナの最大幅を960pxに設定 */
  margin: auto; /* マージンを自動に設定し、中央寄せ */
  display: flex; /* Flexboxを有効に設定 */
  justify-content: center; /* 子要素を水平方向の中央に配置 */
  align-items: center; /* 子要素を垂直方向の中央に配置 */
  flex-wrap: wrap; /* 子要素がコンテナの幅を超えたら折り返す設定 */
  padding-top: 120px; /* 上のパディングを120pxに設定 */
  padding-bottom: 80px; /* 下のパディングを80pxに設定 */
}

/* .top-messageセクションに相対位置を指定します。 */
.top-message {
  position: relative; /* 位置を相対的に設定 */
}

/* .top-newServicesセクションに対し、相対位置を指定し、パディングと背景色を設定して、見た目を整えます。 */
.top-newServices {
  position: relative; /* セクション内の他の要素を相対的に配置する基準点を設定 */
  padding-left: 30px; /* 左側のパディング */
  padding-right: 30px; /* 右側のパディング */
  padding-top: 50px; /* 上側のパディング */
  padding-bottom: 60px; /* 下側のパディング */
  background-color: #f5f8fa; /* 背景色を薄いグレーに設定 */
  height: auto; /* 高さをコンテンツに合わせて自動調整 */
}

/* .top-newServices__containerクラスでは、最大幅を600pxに設定し、自動のマージンで中央寄せを行い、左右のパディングを追加して、内容が端にくっつかないようにします。 */
.top-newServices__container {
  max-width: 600px; /* 最大幅を600pxに制限 */
  margin: 60px auto; /* 上下に60px、左右を自動でマージン設定して中央寄せ */
  padding-left: 15px; /* 左側のパディング */
  padding-right: 15px; /* 右側のパディング */
  clear: both; /* 左右のフロートをクリア */
}

/* .top-titleクラスでは、テキストを中央寄せし、下に20pxのパディングを追加します。 */
.top-title {
  text-align: center; /* テキストを中央寄せ */
  padding-bottom: 20px; /* 下部に20pxのパディング */
}

/* .top-main-buttonセクションでは、上マージンを30pxに設定し、フレックスボックスを使用して中央に配置し、下に20pxのパディングを追加します。 */
.top-main-button {
  margin-top: 30px; /* 上部のマージンを30pxに設定 */
  display: flex; /* フレックスボックスを使用 */
  justify-content: center; /* 子要素を水平方向の中央に配置 */
  padding-bottom: 20px; /* 下部に20pxのパディング */
}

/* .innerクラスでは、フレックスボックスを使用し、最大幅を1200pxに設定し、中央寄せを行い、複数行に渡る内容をwrapします。 */
.inner {
  display: flex; /* フレックスボックスを使用 */
  max-width: 1200px; /* 最大幅を1200pxに制限 */
  margin: 0 auto; /* 左右を自動でマージン設定して中央寄せ */
  flex-wrap: wrap; /* 子要素がコンテナの幅を超えたら折り返し */
}

/* .noflexクラスでは、表示方法をブロックに設定し、!importantで他のスタイルより優先させます。 */
.noflex {
  display: block !important; /* ブロックレベル要素として表示、!importantで他の設定を上書き */
}

/* .top-main-about-serviceセクションでは、相対位置を指定し、パディングと背景色を白に設定して、見た目を整えます。 */
.top-main-about-service {
  position: relative; /* 他の要素に対する位置を相対的に設定 */
  padding-left: 30px; /* 左側のパディング */
  padding-right: 30px; /* 右側のパディング */
  padding-top: 50px; /* 上側のパディング */
  padding-bottom: 60px; /* 下側のパディング */
  background-color: white; /* 背景色を白に設定 */
  height: auto; /* 高さを内容に応じて自動調整 */
}

/* .about_service__listクラスでは、アイテム間の間隔と基準線の配置を定義します。 */
.about_service__list {
  margin-top: 30px; /* リストの上マージン */
  justify-content: space-between; /* アイテム間に均等なスペースを設定 */
  align-items: baseline; /* アイテムを基準線に沿って揃える */
}

/* .about_service__list_itemクラスでは、アイテムの幅を30%に設定します。 */
.about_service__list_item {
  width: 30%; /* アイテムの幅 */
}

/* 画面幅が600px以下の場合、.about_service__listクラスのアイテムを縦に並べ、中央寄せを行い、.about_service__list_itemクラスの幅を80%に設定し、下マージンを追加します。 */
@media (max-width: 600px) {
  .about_service__list {
    flex-direction: column; /* 画面サイズが600px以下になると、アイテムを縦に並べ替え */
    align-items: center; /* 中央揃え */
  }

  .about_service__list_item {
    width: 80%; /* 各アイテムはコンテナの80%の幅を占める */
    margin-bottom: 20px; /* アイテムの下にスペースを追加 */
  }
}

/* .flexboxクラスでは、フレックスボックスの表示を有効にします。 */
.flexbox {
  display: flex; /* フレックスボックス表示 */
}

/* サービスリストの見出しにスタイルを適用します。見出しは中央揃えで、特定の色、フォントサイズ、太字で表示されます。 */
.about_service__list_item_head {
  margin-top: 32px; /* 見出しの上マージン */
  color: #13b1c0; /* 見出しの色 */
  font-size: 22px; /* 見出しのフォントサイズ */
  font-weight: 700; /* 見出しのフォントの太さ */
  text-align: center; /* 見出しを中央揃えに */
}

/* サービスリストの本文に上マージンを適用します。 */
.about_service__list_item_body {
  margin-top: 24px; /* 本文の上マージン */
}

/* サービス手順フローをフレックスボックスで中央揃えにし、サイドにパディングを追加します。 */
.c-serviceStep_flow {
  display: flex; /* フレックスボックス表示を有効にします。 */
  justify-content: center; /* 子要素を水平方向の中央に配置します。 */
  padding: 0 20px; /* 左右に20pxのパディングを追加します。 */
}

/* 画面幅が600px以下の場合、サービス手順フローを縦方向に並べ替え、中央揃えにします。 */
@media only screen and (max-width: 600px) {
  .c-serviceStep_flow {
    flex-direction: column; /* 子要素を縦に並べます。 */
    align-items: center; /* 子要素を垂直方向の中央に配置します。 */
  }
}

/* サービスフローセクションに相対位置を設定し、下マージンを追加します。 */
.c-serviceFlow {
  width: auto; /* 幅を自動調整します。 */
  position: relative; /* 位置を相対的に設定します。 */
  margin-bottom: 60px; /* 下に60pxのマージンを設定します。 */
}

/* サービスフローテキストに右パディングを追加します。 */
.c-serviceFlow_text {
  padding-right: 30px; /* 右側に30pxのパディングを追加します。 */
}

/* 購入者向けメインセクションにスタイルを適用します。位置を相対に設定し、パディングと背景色を指定します。 */
.top-main-buyer {
  position: relative; /* 位置を相対的に設定します。 */
  padding-left: 30px; /* 左側に30pxのパディングを追加します。 */
  padding-right: 30px; /* 右側に30pxのパディングを追加します。 */
  padding-top: 50px; /* 上側に50pxのパディングを追加します。 */
  padding-bottom: 60px; /* 下側に60pxのパディングを追加します。 */
  background-color: #f4f9e9; /* 背景色を淡い緑色に設定します。 */
  height: auto; /* 高さを内容に応じて自動調整します。 */
}

/* 購入者向けメインコンテナにフレックスボックスを適用し、中央揃えのスタイルを設定します。 */
.top-main-buyer__container {
  max-width: 1200px; /* 最大幅を1200pxに設定します。 */
  margin: 0px auto; /* マージンを自動で設定し、中央に配置します。 */
  padding-top: 0px; /* 上側のパディングは0に設定します。 */
  padding-bottom: 0px; /* 下側のパディングも0に設定します。 */
  display: flex; /* フレックスボックス表示を有効にします。 */
  flex-direction: column; /* 子要素を縦に並べます。 */
  justify-content: center; /* 子要素を垂直方向の中央に配置します。 */
  align-items: center; /* 子要素を水平方向の中央に配置します。 */
}

/* 販売者向けメインセクションにスタイルを適用します。パディングと背景色を指定し、位置を相対に設定します。 */
.top-main-seller {
  position: relative; /* セクション内の他の要素に対する基準位置を提供します。 */
  padding-left: 30px; /* 左側に30pxのパディングを追加。 */
  padding-right: 30px; /* 右側に30pxのパディングを追加。 */
  padding-top: 50px; /* 上部に50pxのパディングを追加。 */
  padding-bottom: 60px; /* 下部に60pxのパディングを追加。 */
  background-color: #e9f6fc; /* 背景色を薄い青で設定。 */
  height: auto; /* 高さは内容によって自動調整されます。 */
}

/* 販売者向けメインコンテナにフレックスボックスを適用し、中央揃えのスタイルを設定します。 */
.top-main-seller__container {
  max-width: 1200px; /* コンテナの最大幅を1200pxに設定。 */
  margin: 0px auto; /* 上下のマージンは0、左右のマージンは自動でコンテナを中央に配置。 */
  padding-top: 0px; /* 上部のパディングはなし。 */
  padding-bottom: 0px; /* 下部のパディングもなし。 */
  display: flex; /* フレックスボックスを表示。 */
  flex-direction: column; /* 子要素を縦方向に配置。 */
  justify-content: center; /* 子要素を中央に寄せる。 */
  align-items: center; /* 子要素を軸中心に配置。 */
}

/* 登録セクションにスタイルを適用します。パディングと背景色を指定し、位置を相対に設定します。 */
.top-registar {
  position: relative; /* セクション内の他の要素に対する基準位置を提供します。 */
  padding-left: 30px; /* 左側に30pxのパディングを追加。 */
  padding-right: 30px; /* 右側に30pxのパディングを追加。 */
  padding-top: 50px; /* 上部に50pxのパディングを追加。 */
  padding-bottom: 50px; /* 下部に50pxのパディングを追加。 */
  background-color: #f5f8fa; /* 背景色を薄いグレーで設定。 */
  height: auto; /* 高さは内容によって自動調整されます。 */
}

/* 登録セクションのコンテナにスタイルを適用します。最大幅を指定し、自動のマージンで中央に配置。上下にパディングを加え、フレックスボックスを使用して内容を縦方向に中央揃えにします。 */
.top-registar__container {
  max-width: 960px; /* コンテナの最大幅を設定し、コンテンツの幅を制限します。 */
  margin: 0px auto; /* 自動マージンで水平方向に中央に配置します。 */
  padding-top: 30px; /* コンテナの上部に余白を設定します。 */
  padding-bottom: 60px; /* コンテナの下部に余白を設定します。 */
  display: flex; /* フレックスボックスモデルを適用し、子要素のレイアウトを管理します。 */
  flex-direction: column; /* 子要素を縦方向に配置します。 */
  justify-content: center; /* 子要素を垂直方向の中央に配置します。 */
  align-items: center; /* 子要素を水平方向の中央に配置します。 */
}

/* カードの画像にスタイルを適用します。幅は100%で最大300px、高さは自動で指定し、中央に配置します。object-fit: coverを使用して、アスペクト比を保ちながらコンテナを満たすようにします。 */
.card-img-top {
  width: 100%; /* コンテナの幅に合わせて画像の幅を調整します。 */
  max-width: 300px; /* 画像の最大幅を制限します。 */
  height: auto; /* 高さを自動で設定し、画像のアスペクト比を保持します。 */
  display: block; /* 画像をブロック要素として表示し、新しい行に配置します。 */
  margin: 0 auto; /* 画像を水平方向に中央に配置します。 */
  object-fit: cover; /* 画像がコンテナに合わせてカバーされるように調整し、アスペクト比を保ちます。 */
  height: 200px; /* 画像の高さを指定します。 */
}

/* 販売者のタイトルにスタイルを適用します。特定の色で太字にして目立たせます。 */
.vendor-title {
  color: #3366ff; /* タイトルの色を鮮やかな青に設定します。 */
  font-weight: bold; /* フォントを太字に設定し、目立たせます。 */
}

/* 購入者のタイトルにスタイルを適用します。独自の色で太字にして区別します。 */
.buyer-title {
  color: #33cc33; /* タイトルの色を明るい緑に設定します。 */
  font-weight: bold; /* フォントを太字に設定し、強調表示します。 */
}
